// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Restaurant Settings Model
model RestaurantSettings {
  id            String   @id @default(cuid())
  restaurantName String   @default("مطعمنا المميز")
  logoUrl       String?
  primaryColor  String   @default("#f59e0b") // amber-500
  secondaryColor String @default("#ea580c") // orange-600
  backgroundColor String @default("#fffbeb") // amber-50
  contactPhone  String   @default("1234-567-890")
  contactEmail  String   @default("info@restaurant.com")
  address       String   @default("شارع الملك فهد، الرياض")
  workingHours  String   @default("من الساعة 11:00 صباحاً حتى 11:00 مساءً")
  welcomeText   String   @default("مرحباً بك في مطعمنا! تصفح قائمتنا اللذيذة واختر من تشكيلتنا الواسعة من الأطباق الشرقية الأصيلة التي تقدمها أيدي طهاة محترفين بخبرة طويلة")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Restaurant Menu Models
model Category {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  order       Int      @default(0)
  visible     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  items       MenuItem[]
}

model MenuItem {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       String
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

// Admin User Model
model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}